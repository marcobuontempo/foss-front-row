services:
  mongo1:
    image: mongo
    container_name: mongo1
    ports:
      - "27017:27017"
    volumes:
      - mongo1-data:/data/db
    command: "--replSet mongo-replica-set"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "rs.status()"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo2:
    image: mongo
    container_name: mongo2
    ports:
      - "27018:27017"
    volumes:
      - mongo2-data:/data/db
    command: "--replSet mongo-replica-set"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "rs.status()"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo3:
    image: mongo
    container_name: mongo3
    ports:
      - "27019:27017"
    volumes:
      - mongo3-data:/data/db
    command: "--replSet mongo-replica-set"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "rs.status()"]
      interval: 10s
      timeout: 5s
      retries: 3

  init-replica-set:
    image: mongo
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./init-replica-set.js:/docker-entrypoint-initdb.d/init-replica-set.js
    command: ["mongo", "mongo1:27017/init-replica-set.js"]

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data: